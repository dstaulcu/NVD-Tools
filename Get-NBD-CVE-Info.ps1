$feed_url = "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-modified.json.zip"
$feed_filepath = "$env:TEMP\nvdcve-1.1-modified.json"
$feed_filepath_csv = "$env:TEMP\nvdcve-1.1-modified.json"

function Get-Web-Download($url)
{

    # obtain download location
    $download_filename = $url.Split("/")[-1]
    $download_path = "$env:temp\$download_filename"

    # remove any previously downloaded fies
    if (test-path $download_path) {
        Remove-Item -Path $download_path -Force
    }

    # download the file
    $client = new-object System.Net.WebClient 
    $client.DownloadFile($url, $download_path) 

    # return the path to file
    return $download_path
}

function Expand-ZIPFile($file, $destination)
{
    $shell = new-object -com shell.application
    $zip = $shell.NameSpace($file)
    foreach($item in $zip.items())
    {
        $shell.Namespace($destination).copyhere($item)
    }
}

# take note of start date-time
$jobstart = Get-Date

# remove previons version of output csv file
if (Test-Path -Path $feed_filepath_csv) { 
    Remove-Item -path $feed_filepath_csv -Force
}

# remove previous version of downloads
if (test-path $feed_filepath) {
    Remove-Item $feed_filepath -Force
}

# download most recent zip CVE list
Write-host "$(get-date) - Downloading $($feed_url)."
$download_path = Get-Web-Download -url $feed_url

# extract the zipped CVE list
Write-host "$(get-date) - Expanding $($download_path)."
Expand-ZIPFile -file $download_path -destination $env:TEMP

# read feed file from JSON to PSCustomObject
$feed_data = get-content -path $feed_filepath_csv | ConvertFrom-Json

# loop through CVE_Items and select out items of interest
$Records = @()

foreach ($item in $feed_data.CVE_Items) {
    $item.configurations.nodes.cpe_match.cpe23Uri -match "cpe\:2\.3\:a:([^\:]+):([^\:]+):([^\:]+)" | Out-Null
    $vendor = $matches[1]
    $product = $matches[2]
    $version = $matches[3]

    $Info = @{
        publishedDate = $item.publishedDate
        lastModifiedDate = $item.lastModifiedDate

        CVE_ID = $item.cve.CVE_data_meta.ID

        cpe23Uri = $item.configurations.nodes.cpe_match.cpe23Uri
        vendor = $vendor
        product = $product
        version = $version

        attackVector = $item.impact.baseMetricV3.cvssV3.attackVector
        attackComplexity = $item.impact.baseMetricV3.cvssV3.attackComplexity
        privilegesRequired = $item.impact.baseMetricV3.cvssV3.privilegesRequired
        userInteraction = $item.impact.baseMetricV3.cvssV3.userInteraction
        confidentialityImpact = $item.impact.baseMetricV3.cvssV3.userInteraction
        integrityImpact = $item.impact.baseMetricV3.cvssV3.integrityImpact
        availabilityImpact = $item.impact.baseMetricV3.cvssV3.availabilityImpact
        baseScore = $item.impact.baseMetricV3.cvssV3.baseScore
        baseSeverity = $item.impact.baseMetricV3.cvssV3.baseSeverity
        exploitabilityScore = $item.impact.baseMetricV3.exploitabilityScore
        impactScore = $item.impact.baseMetricV3.impactScore
        Description = ($item.cve.description.description_data | where-object{$_.lang -eq "en"}).value
    }
    $Records += New-Object -TypeName PSObject -Property $Info
}

# write summary of time to execute
$jobTotalSeconds = (New-TimeSpan -Start $jobstart).TotalSeconds

write-host "$(get-date) - Task completed in $($jobTotalSeconds) seconds converting $($Records.Count) records!"

<#
###################################
# INTERACTIVE STUFF FOR DISCOVERY #
###################################

# read stored records into powershell PSCustomObject
$Records = Import-Csv -Path $nvd_cpe_filepath_csv

# show records 
$Records | Select-Object -Property CVE_ID, publishedDate, lastModifiedDate, vendor, product, version, exploitabilityScore, impactScore, description

# show records in gridview
$Records | Select-Object -Property CVE_ID, publishedDate, lastModifiedDate, vendor, product, version, exploitabilityScore, impactScore, description | Out-GridView

#>












